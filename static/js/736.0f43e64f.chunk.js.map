{"version":3,"file":"static/js/736.0f43e64f.chunk.js","mappings":"gQAEaA,EAAOC,EAAAA,EAAAA,GAAH,2MAaJC,EAASD,EAAAA,EAAAA,IAAH,qE,SCyBnB,EAlCa,WACX,IAAQE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAAIO,MAAK,SAAAC,GAAI,OAAIJ,EAAYI,EAAhB,GAC3B,GAAE,CAACR,KAEF,0BACE,SAACH,EAAD,UACGM,GACCA,EAASM,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACX,2BACE,SAACd,EAAD,CACEe,IACEJ,EAAY,yCAC0BA,GAClCK,EAENC,IAAKL,KAEP,uBAAIA,IACHC,IACC,0BACE,0BAAM,eACLA,OAbEC,EADE,OAsBtB,C,mMCpCKI,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,uCACiDC,GADjD,kBAGoBG,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASd,MAJb,gCAMHe,QAAQC,IAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,gFACCoB,EADD,UACUH,EADV,kBAC4BjB,EAD5B,oBAC0CkB,GAD1C,kBAGoBG,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASd,MAJb,gCAMHe,QAAQC,IAAR,MANG,gFAUA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,gFACCoB,EADD,UACUH,EADV,kBAC4BjB,EAD5B,4BACkDkB,GADlD,kBAGmBG,EAAAA,EAAAA,IAAUD,GAH7B,cAGEE,EAHF,yBAIIA,EAASd,KAAKkB,MAJlB,gCAMHH,QAAQC,IAAR,MANG,gFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B3B,GAA9B,gFACCoB,EADD,UACUH,EADV,kBAC4BjB,EAD5B,4BACkDkB,GADlD,kBAGoBG,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,yBAIIA,EAASd,KAAKoB,SAJlB,gCAMHL,QAAQC,IAAR,MANG,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACCV,EADD,UACWH,EADX,iCAC4CC,EAD5C,kBAC6DY,GAD7D,kBAGmBT,EAAAA,EAAAA,IAAUD,GAH7B,cAGEE,EAHF,yBAIIA,EAASd,MAJb,gCAMHe,QAAQC,IAAR,MANG,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  text-align: center;\n  justify-content: space-evenly;\n  > li {\n    width: 200px;\n  }\n`;\n\nexport const Poster = styled.img`\nwidth:200px;\nheight:300px;\ndisplay:block;\n`\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/API';\nimport img from '../../img/wallpaper-error.jpeg';\nimport { List, Poster } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [infoCast, setInfoCast] = useState([]);\n  useEffect(() => {\n    getMovieCast(id).then(data => setInfoCast(data));\n  }, [id]);\n  return (\n    <div>\n      <List>\n        {infoCast &&\n          infoCast.map(({ profile_path, name, character, cast_id }) => (\n            <li key={cast_id}>\n              <Poster\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : img\n                }\n                alt={name}\n              />\n              <p>{name}</p>\n              {character && (\n                <p>\n                  <span>Character:</span>\n                  {character}\n                </p>\n              )}\n            </li>\n          ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9873e67c5e03bd61e79d852c2fd46a6';\n\nexport async function getTrendingMovies() {\n  const url = `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const url = `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  const url = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  try {\n\t  const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  const url = `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const url =  `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  try {\n\t  const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n"],"names":["List","styled","Poster","id","useParams","useState","infoCast","setInfoCast","useEffect","getMovieCast","then","data","map","profile_path","name","character","cast_id","src","img","alt","MAIN_URL","API_KEY","getTrendingMovies","url","axios","response","console","log","getMovieById","cast","getMovieReview","results","getMovieByQuery","query"],"sourceRoot":""}