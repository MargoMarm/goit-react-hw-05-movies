{"version":3,"file":"static/js/114.4ae36b67.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 15px;\n  display: flex;\n  padding: 0;\n`;\n\nexport const Card = styled.li`\n  border-radius: 10px;\n  width: 300px;\n  text-align: center;\n  :hover {\n    transform: scale(1.03)\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  margin-top: 10px;\n`;\n\nexport const Img = styled.img`\n  border-radius: inherit;\n  width: 300px;\n  height: 450px;\n  border-radius: 10px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { Img, List, Title, Card } from './MoviesList.styled';\nimport img from '../../img/wallpaper-error.jpeg';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Card key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                    : img\n                }\n                alt={title}\n              />\n              <Title>{title}</Title>\n            </Link>\n          </Card>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ErrorText = styled.p`\n  text-align: center;\n  font-weight: 500;\n  font-size: 34px;\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1),\n    1px 1px 1px rgba(0, 0, 0, 0.5);\n`;\n","import { ErrorText } from './Error.styled';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ errorText }) => {\n  return <ErrorText>{errorText}</ErrorText>;\n};\n\nexport default Error;\n\nError.propTypes = {\n  errorText: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin: 0 auto;\n  margin-bottom: 18px;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 20px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { FormButton, Form, FormInput } from './SearchForm.styled';\nimport { useState } from 'react';\nimport { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\n\n\nconst SearchForm = ({ setParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.trim().toLowerCase());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setParams(query);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormInput\n        type=\"text\"\n        name=\"search\"\n        onChange={handleChange}\n      />\n      <FormButton type=\"submit\">\n        <FcSearch size=\"30\" />\n      </FormButton>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n\tsetParams: PropTypes.func.isRequired,\n}","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/API';\nimport Error from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [totalResults, setTotalResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n    const startFetching = async () => {\n      setLoading(true);\n      try {\n        const { results, total_results } = await getMovieByQuery(query);\n        setMovies(results);\n        setTotalResults(total_results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    startFetching();\n  }, [query]);\n  const setParams = query => {\n    const params = query !== '' ? { query } : {};\n    setSearchParams(params);\n  };\n  return (\n    <div>\n      <SearchForm setParams={setParams} />\n      {loading && <Loader />}\n      {movies && !loading && <MoviesList movies={movies} />}\n      {totalResults === 0 && (\n        <Error errorText={'Sorry, nothing has been found at your request'} />\n      )}\n      {error && (\n        <Error\n          errorText={`Something went wrong... ${error}. Please try again.`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c9873e67c5e03bd61e79d852c2fd46a6';\n\nexport async function getTrendingMovies() {\n  const url = `${MAIN_URL}/trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  const url = `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  const url = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  try {\n\t  const response = await axios.get(url);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  const url = `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  const url =  `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  try {\n\t  const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n"],"names":["List","styled","Card","Title","Img","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","img","alt","ErrorText","errorText","Form","FormButton","FormInput","setParams","useState","query","setQuery","onSubmit","e","preventDefault","type","name","onChange","target","value","trim","toLowerCase","size","useSearchParams","searchParams","setSearchParams","setMovies","totalResults","setTotalResults","error","setError","loading","setLoading","get","useEffect","startFetching","getMovieByQuery","results","total_results","message","Loader","MoviesList","MAIN_URL","API_KEY","getTrendingMovies","url","axios","response","data","console","log","getMovieById","getMovieCast","cast","getMovieReview"],"sourceRoot":""}